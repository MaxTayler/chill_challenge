<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
// this is the first and only object in the game the room all other 
global.game_state = 1;// game used pause menu and play
global.win = 0; // test players' win stenreo 

global.set_time = 1;// # of minute for timed challenge
global.play_mode = 1;


// setup player 1's 
global.test_range  = 10; // 

global.p1_handicap = 0; // player 1 handicap 
global.pulse_high_p1 = 0; //player 1 pulse's is high 
global.pulse_check_p1 = 0;// switches on pulse rate check, data table , and refreshes counts 
global.count_check_p1  = 0;// counts number of pulses for global.pulse_count 
global.pulse_rate_p1  = 0; // used to calculate heart rate to set hr_x
global.count_total_p1 = 0;// counts time it take for pulse_count to complete 
global.pause_p1 = 0;

global.error_check_p1 = 300;// time it takes for player heart monitor to error
global.error_count_p1 = 0;// holds error time variable 

global.dif_avg_p1 = 0; // 
global.total_avg_p1 = 0; // 

// varibles possible not needed 
global.pre_state_ = 0; // used for pausing and error states


// heart rate data table for player one 
global.hr_set_p1 = 1; // set data point entery 
global.hr_1_p1 = 10;
global.hr_2_p1 = 20;
global.hr_3_p1 = 30;
global.hr_4_p1 = 40;

// varible that track average and diffrents

         global.hr_count_p1 = 1;
         global.avg_hr_p1 = 0;
         global.hr_new_p1 = 0;
         global.hr_old_p1 = 0;
         global.dif_new_p1 = 0;
         global.dif_hr_p1  = 0;
         




// SETUP PLAYER 2   
global.p2_handicap = 0; //player's 2 handicap 
global.pulse_high_p2 = 0; //player 2 pulse's is high 
global.pulse_check_p2 = 0;// switches on pulse rate check, data table , and refreshes counts 
global.count_check_p2  = 0;// counts number of pulses for global.pulse_count 
global.pulse_rate_p2  = 0; // used to calculate heart rate to set hr_x
global.count_total_p2 = 0;// counts time it take for pulse_count to complete 
global.pause_p2 = 0;


global.error_check_p2 = 300;// time it takes for player heart monitor to error
global.error_count_p2 = 0;// holds error time variable 

global.dif_avg_p2 = 0; // 
global.total_avg_p2 = 0; // 

// varibles possible not needed 
global.pre_state_ = 0; // used for pausing and error states


// heart rate data table for player 2 
global.hr_set_p2 = 1; // set data point entery 
global.hr_1_p2 = 10;
global.hr_2_p2 = 20;
global.hr_3_p2 = 30;
global.hr_4_p2 = 40;


         global.hr_count_p2 = 1;
         global.avg_hr_p2 = 0;
         global.hr_new_p2 = 0;
         global.hr_old_p2 = 0;
         global.dif_new_p2 = 0;
         global.dif_hr_p2  = 0;



// new room orgins   
global.X = room_width/2; // new x orgin 
global.Y = room_height/2;// new y orgin  

//setup background loactions
    background_x[1] = 4;
    background_y[1] = 2;
   
    background_x[3] = 8;
    background_y[3] = 8;
 //   
instance_create(global.X,global.Y,obj_chill_challenge_engine);// create game engine 

global.move_event_p1 = 0;
global.move_event_p2 = 0;

global.mute = 0;
global.sfx = 0;

instance_create(global.X,global.Y,obj_sound_engine);// create game engine 

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// resize screen o

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
