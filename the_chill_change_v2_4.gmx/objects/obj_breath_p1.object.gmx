<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_breath_p1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
breath_speed = 6;


image = 0;


move_count = 10;
move_set = 10;
move_x = 0;
move_start = global.X-100
move_limit = move_start+(breath_speed+10);

move_dir  = -1;

x = move_start+6;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// make breath timer visible 
if (keyboard_check_pressed(ord('D')))
{
if(visible == 1){visible = 0;}
else{visible = 1;}
}

// increase timer   
if (keyboard_check_pressed(ord('A')))
{
if (breath_speed &gt;= 12)
 {breath_speed = 12;}
 else{breath_speed += 1;}
}


if (keyboard_check_pressed(ord('S')))
{
if (breath_speed &lt;= 2)
 {breath_speed = 2;}
 else{breath_speed -= 1;}
}

move_limit = move_start + breath_speed*10; // sets move limit point 

if x &gt;= move_limit || x &lt;= move_start //check to see if timer is at it's limit
{  
    if move_dir == 1
    {   
        x -= 1
        image = 1;
        move_dir = -1;
    }    
    else
    {
        x += 1;
        image = 0;
        move_dir = 1;
    }   
}
else
{

if (move_count == 0)
{
x += move_dir;
move_count = move_set;
}
else{move_count -= 1;}

}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_purple);
draw_line(move_start,y,move_limit,y);
draw_set_color(c_black);

draw_sprite(spr_breath_p1,image,x,y);
//draw_text(x,y,breath_count);

/*//uncoment debug move points
draw_set_color(c_red);
draw_circle(move_limit,global.X-60,3,true);
draw_set_color(c_green);
draw_circle(move_start,global.X-60,3,true);
draw_set_color(c_black);*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
