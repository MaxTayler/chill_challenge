<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// for drawing rolling hr 
hr_1_x_p1 = 0;
hr_2_x_p1 = 0;
hr_3_x_p1 = 0;
hr_4_x_p1 = 0;

hr_1_y_p1 = 0;
hr_2_y_p1 = 0;
hr_3_y_p1 = 0;
hr_4_y_p1 = 0;

step_count_1 = 20;
step_count_2 = 20;
step_count_3 = 32;
step_count_4 = 10;


draw_fx_1 = false;//
move_step = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hr_set = global.hr_set_p1; 
if (global.move_event_p1 == 1) // starts movement event when cycle is complet 
{
    switch(move_step)
    {
        case 1:// count complete
        
            draw_fx_1 = true;
        if (step_count_1 == 0)
        {
            move_step = 2;
            step_count_1 = 10;
        }
        else{step_count_1 -= 1;}
        break;
        
        case 2: // new number apears
            switch (hr_set)
            {
                case 2:hr_1_x_p1 = global.X-88hr_1_y_p1 = global.Y+16;break;
                
                case 3:hr_2_x_p1 = global.X-88;hr_2_y_p1 = global.Y+16;break;
                
                case 4:hr_3_x_p1 = global.X-88;hr_3_y_p1 = global.Y+16;break;
                
                case 1:hr_4_x_p1 = global.X-88;hr_4_y_p1 = global.Y+16;break;
                
            }
            if (step_count_2 == 0)
            {
                draw_fx_1 = false;
                step_count_2 = 10;
                move_step = 3;
            }
            else{step_count_2 -= 1}
        
        break;
        
        case 3: //old numbers moves
        if (step_count_3 == 0 )
        {
        move_step = 4;
        step_count_3 = 32;
        }
        else{
            switch (hr_set)
            {
                case 2 :hr_2_x_p1 += 1;hr_3_x_p1 += 1;hr_4_x_p1 += 1;break;      
                case 3:hr_1_x_p1 += 1;hr_3_x_p1 += 1;hr_4_x_p1 += 1;break;    
                case 4: hr_1_x_p1 += 1;hr_2_x_p1 += 1;hr_4_x_p1 += 1;break;          
                case 1 :hr_1_x_p1 += 1;hr_2_x_p1 += 1;hr_3_x_p1 += 1;break;
            }
        step_count_3 -= 1;
        }
       
           break;          
        
        case 4: // new is placed 
       
        switch(hr_set)
        {
            case 2: hr_1_x_p1 = global.X-100; hr_1_y_p1 = global.Y+54; break;
            case 3: hr_2_x_p1 = global.X-100; hr_2_y_p1 = global.Y+54; break;
            case 4: hr_3_x_p1 = global.X-100; hr_3_y_p1 = global.Y+54; break;
            case 1: hr_4_x_p1 = global.X-100; hr_4_y_p1 = global.Y+54; break;
        
        }       
        move_step = 1; // reset next cycle
        global.move_event_p1 = 0; // close movement event
        
        break;
    }


}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_set_colour(c_red);
draw_text(hr_1_x_p1,hr_1_y_p1,global.hr_1_p1 ); 
draw_set_colour(c_orange);
draw_text(hr_2_x_p1,hr_2_y_p1,global.hr_2_p1 ); 
draw_set_colour(c_green);
draw_text(hr_3_x_p1,hr_3_y_p1,global.hr_3_p1 ); 
draw_set_colour(c_blue);
draw_text(hr_4_x_p1,hr_4_y_p1,global.hr_4_p1 ); 

draw_set_colour(c_black);

if(draw_fx_1 = true){draw_sprite(spr_fx_1,0,global.X-88,global.Y+16 );}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
