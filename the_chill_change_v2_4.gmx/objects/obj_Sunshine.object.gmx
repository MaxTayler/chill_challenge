<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_Sunshine</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
global.X = room_width/2 // setup orgin in center of room horizonalty
global.Y = room_height/2 // setup orgin in center of room vertical  

count = 1;

timer = 0;//count time in between 
timer_avg = 300;//start timer avg  
test_n = 1; // 

global.dif_avg = 50; //  
global.hr_avg = 50; // 
global.pulse_high = 0; // 

pulse_latch = 0; // when pulse is high controls latch so varibles cycle 

S_set = 1;  // set which size 

S_size = 32; // create 

cloud_phase  = 100;
dif_con = 300;

// set up collor pallete 
col1 = 0;  
col2 = 255;

S1 = S_size; 
S2 = S_size; 
S3 = S_size;  
S4 = S_size; 
S5 = S_size;  
S6 = S_size;
S7 = S_size;
S8 = S_size;
S9 = S_size;
S10 = S_size;

S3_1x = 1; 
S3_1y = 1;
S3_2x = 1;
S3_2y = 1;
S3_3x = 1;
S3_3y = 1;
S3_4x = 1;
S3_4y = 1;

breath_set = 0;
breath_count  = 600;

col_sky = make_colour_rgb(100,100,255);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if keyboard_check(vk_right) {global.pulse_high = 1;}
else{global.pulse_high = 0;}

// if pulse is high
if (global.pulse_high == 1)
{
        if (pulse_latch  == 0 ) //
        {
            switch (S_set)
            {
            case 1:
            S1 = 6;
            S_set += 1;
            break;
        
            
            case 2:
            S2 = 6;
            S_set += 1;
            break;    
            
            case 3:
            S3 = 6;
            S_set += 1;
            break;
        
            case 4:
            S4 = 6;
            S_set += 1;
            break;
        
            
            case 5:
            S5 = 6;
            S_set += 1;
            break;    
            
            case 6:
            S6 = 6;
            S_set += 1;
            break;
            
            case 7:
            S7 = 6;
            S_set += 1;
            break;
        
            
            case 8:
            S8 = 6;
            S_set += 1;
            break;    
            
              case 9:
            S9 = 6;
            S_set += 1;
            break;  
            
              case 10:
            S10 = 6;
            dif=timer; 
            S_set = 1;
            break;  
    
    }
    
 
    timer_avg = (((timer_avg*test_n)+timer)/(test_n + 1)); // the average of all times of heartbeats 
    timer = 0; //
    test_n += 1; //
    pulse_latch = 1; //  
  
  dif_con = (timer_avg - timer); // comparies last time to average
// looks at   
  
}
  
  }
else{pulse_latch  = 0 ;}

timer += 1;// 

if(dif_con &gt;= 100 or dif_con &lt;= -100  )
{
cloud_phase = 100;// set couldy  to max 
}
else
{
if dif_con &lt;= -1// turns negative number postitive then calculates
{cloud_phase = round(-1*dif_con); }
else 
{cloud_phase = round(dif_con);}
}

if (count ==  0) // increase size  
{
S1 += 1;
S2 += 1;
S3 += 1;
S4 += 1;
S5 += 1;
S6 += 1;
S7 += 1;
S8 += 1;
S9 += 1;
S10 += 1;
count = 1;
}
else{count -= 1;}  


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>background_colour = col_sky; // set back ground colour
// draw sun 
draw_circle_colour(global.X+360,global.Y-240,cloud_phase,16777215,col_sky,false); //16763080

// draw clound
draw_sprite_ext(spr_clouds,0,global.X+240-cloud_phase,global.Y-180,-1,1,1,0,1);
draw_set_alpha(cloud_phase/100);
draw_sprite(spr_clouds,0,global.X-240+cloud_phase,global.Y-180);
draw_set_alpha(1);

draw_set_alpha(1);

draw_set_color(c_red);
draw_circle(240,240,S1,true);
draw_set_color(c_orange);
draw_circle(240,240,S2,true);
draw_set_color(c_yellow);
draw_circle(240,240,S3,true);
draw_set_color(c_lime);
draw_circle(240,240,S4,true);
draw_set_color(c_green);
draw_circle(240,240,S5,true);
draw_set_color(c_aqua);
draw_circle(240,240,S6,true);
draw_set_color(c_blue);
draw_circle(240,240,S7,true);
draw_set_color(c_navy);
draw_circle(240,240,S8,true);
draw_set_color(c_purple);
draw_circle(240,240,S9,true);
draw_set_color(c_fuchsia);
draw_circle(240,240,S10,true);

draw_set_color(c_black);









background_colour = col_sky; // set back ground colour 
// debug table 
draw_text(4,4,timer);
draw_text(4,20,timer_avg);
draw_text(4,36,cloud_phase);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
